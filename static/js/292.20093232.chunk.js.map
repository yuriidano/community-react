{"version":3,"file":"static/js/292.20093232.chunk.js","mappings":"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","sources":["redux/profile-selectors.ts","webpack://react-1/./src/components/Prifile/MyPosts/MyPosts.module.scss?e0c9","webpack://react-1/./src/components/Prifile/MyPosts/Post/Post.module.scss?a1a4","components/Prifile/MyPosts/Post/Post.tsx","assets/images/icons/userPost.svg","assets/images/icons/plus.svg","components/Prifile/MyPosts/MyPostsForm.tsx","components/Prifile/MyPosts/MyPosts.tsx","webpack://react-1/./src/components/Prifile/Profile.module.scss?3cda","webpack://react-1/./src/components/Prifile/ProfileInfo/ProfileInfo.module.scss?6978","components/Prifile/ProfileInfo/ProfileStatus.tsx","webpack://react-1/./src/components/Prifile/ProfileInfo/ProfileDataForm.module.scss?d342","components/Prifile/ProfileInfo/ProfileDadaForm.tsx","assets/images/icons/camera.svg","components/Prifile/ProfileInfo/ProfileInfo.tsx","components/Prifile/Profile.tsx","components/Prifile/ProfileContainer.tsx"],"sourcesContent":["import { AppStateType } from \"./redux-store\";\r\n\r\nexport const getStatus = (state: AppStateType) => {\r\n    return state.profilePage.status;\r\n}\r\n\r\nexport const getAutoRizedUserId = (state: AppStateType) => {\r\n    return state.auth.userId;\r\n}\r\n\r\nexport const getIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\nexport const getPosts = (state: AppStateType) => {\r\n    return state.profilePage.posts;\r\n}\r\nexport const getProfile = (state: AppStateType) => {\r\n    return state.profilePage.profile;\r\n}\r\nexport const getIsUpdateProgress = (state: AppStateType) => {\r\n    return state.profilePage.isUpdateProgress;\r\n}\r\n\r\nexport const getProfileMy = (state: AppStateType) => {\r\n    return state.infoPage.profileInfo;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__ipCvj\",\"title\":\"MyPosts_title__Hh214\",\"newPost\":\"MyPosts_newPost__RsHX5\",\"posts\":\"MyPosts_posts__1iPHK\",\"body\":\"MyPosts_body__-MSdV\",\"userPost\":\"MyPosts_userPost__iubri\",\"input\":\"MyPosts_input__3wZFs\",\"button\":\"MyPosts_button__tROL6\",\"error\":\"MyPosts_error__+Hw+e\",\"errorSpan\":\"MyPosts_errorSpan__xggnd\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__2JC9L\",\"avatar\":\"Post_avatar__NyR4X\",\"body\":\"Post_body__QBbNz\",\"text\":\"Post_text__i9zxY\",\"likeBody\":\"Post_likeBody__glNnR\",\"like\":\"Post_like__Z5l62\",\"likeIcon\":\"Post_likeIcon__oayR+\"};","import { FC } from 'react';\r\nimport { ProfileType } from '../../../../types/types';\r\nimport styles from './Post.module.scss';\r\n\r\n\r\ntype PropsPostType = {\r\n  profileMy: ProfileType,\r\n  message: string,\r\n  likeCounter: number\r\n}\r\n\r\nconst Post: FC<PropsPostType> = (props) => {\r\n  if(!props.profileMy.photos) return null\r\n\r\n  return (\r\n    <div className={styles.post}>\r\n      <div className={styles.avatar}>\r\n        <img src={props.profileMy.photos.large || ''} alt=\"\" />\r\n      </div>\r\n      <div className={styles.body}>\r\n        <div className={styles.text}>{props.message}</div>\r\n        <div className={styles.likeBody}>\r\n        <div className={styles.likeIcon}></div>\r\n          <button className={styles.like}>{props.likeCounter}</button>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgUserPost(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffffff\",\n    d: \"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUserPost);\nexport default __webpack_public_path__ + \"static/media/userPost.208ec46e8e9313ceb7fb416af7feb965.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPlus(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffffff\",\n    d: \"M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 144L48 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l144 0 0 144c0 17.7 14.3 32 32 32s32-14.3 32-32l0-144 144 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-144 0 0-144z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.51d1f7489a93626178e7c342bb4e1221.svg\";\nexport { ForwardRef as ReactComponent };","\r\nimport userPost from '../../../assets/images/icons/userPost.svg'\r\nimport plus from '../../../assets/images/icons/plus.svg'\r\nimport classNames from 'classnames';\r\nimport styles from './MyPosts.module.scss'\r\n\r\n\r\n\r\nimport { FC } from \"react\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport { useAppDispatch } from '../../../redux/redux-store';\r\nimport { addPost } from '../../../redux/profile-reducer';\r\n\r\n\r\n\r\ntype PropsMyPostFormType = {};\r\n\r\ntype MyPostFormType = {\r\n    post: string\r\n}\r\n\r\n\r\n\r\n\r\nconst MyPostForm:FC<PropsMyPostFormType> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const {register, handleSubmit, formState: {errors} } = useForm<MyPostFormType>();\r\n\r\n    const submit:SubmitHandler<MyPostFormType> = (formData) => {\r\n        dispatch(addPost(formData.post))\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit(submit)}>\r\n            <label htmlFor=\"post\" className={styles.body}>\r\n                <div className={styles.input}>\r\n                    <input {...register('post', { required: 'field is required', maxLength: { value: 200, message: 'max symbols 200' } })}\r\n                        className={classNames(styles.input)} />\r\n                    {errors.post &&\r\n                        <span className={styles.errorSpan} >{errors.post.message}</span>\r\n                    }\r\n                </div>\r\n                <button className={styles.button}>\r\n                    <img src={plus} alt=\"icon\" />\r\n                </button>\r\n                <div className={styles.userPost}>\r\n                    <img src={userPost} alt=\"icon\" />\r\n                </div>\r\n            </label>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default MyPostForm;","import { FC } from 'react';\r\nimport styles from './MyPosts.module.scss';\r\nimport Post from './Post/Post';\r\nimport MyPostForm from './MyPostsForm';\r\nimport { useAppSelector } from '../../../redux/redux-store';\r\nimport { getPosts, getProfileMy } from '../../../redux/profile-selectors';\r\n\r\n\r\ntype PropsMyPostsType = {};\r\n\r\n\r\nconst MyPosts: FC<PropsMyPostsType> = (props) => {\r\n  const posts = useAppSelector(getPosts);\r\n  const profileMy = useAppSelector(getProfileMy)\r\n\r\n  let postElement = [...posts].reverse().map(p => {\r\n    return (\r\n      <Post profileMy={profileMy} message={p.message} likeCounter={p.likeCounter} key={p.id} />\r\n    )\r\n  });\r\n\r\n \r\n  return (\r\n    <div className={styles.myPosts}>\r\n      <div className={styles.newPost}>\r\n          <MyPostForm />\r\n      </div>\r\n      <div className={styles.posts}>\r\n        {postElement}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPosts;\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__5Wt+s\",\"image\":\"Profile_image__kkRlD\",\"postsTitle\":\"Profile_postsTitle__UHU0P\",\"form\":\"Profile_form__LFGVf\",\"input\":\"Profile_input__30shm\",\"button\":\"Profile_button__DIFzW\",\"post\":\"Profile_post__GNa3s\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__eYDtd\",\"images\":\"ProfileInfo_images__7mz7y\",\"fon\":\"ProfileInfo_fon__eMPru\",\"avararBody\":\"ProfileInfo_avararBody__3dkHX\",\"avatar\":\"ProfileInfo_avatar__KU7H-\",\"changeAvatar\":\"ProfileInfo_changeAvatar__5691p\",\"input\":\"ProfileInfo_input__SfwTM\",\"body\":\"ProfileInfo_body__UihLj\",\"top\":\"ProfileInfo_top__eQtPu\",\"info\":\"ProfileInfo_info__ByPhh\",\"name\":\"ProfileInfo_name__pcQIG\",\"status\":\"ProfileInfo_status__J5VjU\",\"button\":\"ProfileInfo_button__4WcsJ\",\"statusSpan\":\"ProfileInfo_statusSpan__YWiab\",\"LookingForAJob\":\"ProfileInfo_LookingForAJob__IKXQL\",\"skilsBody\":\"ProfileInfo_skilsBody__Aq2eF\",\"skils\":\"ProfileInfo_skils__yDuDh\",\"contacts\":\"ProfileInfo_contacts__Ovk1g\",\"contact\":\"ProfileInfo_contact__rQV39\"};"," import React from \"react\";\r\nimport styles from './ProfileInfo.module.scss'\r\n\r\ntype PropsProfileStatusType = {\r\n    status: string,\r\n    updateStatus: (status: string) => void\r\n}\r\ntype StateProfileStatusType = {\r\n    editMode: boolean,\r\n    status: string\r\n}\r\n\r\n\r\nclass ProfileStatus extends React.Component<PropsProfileStatusType, StateProfileStatusType> {\r\n    \r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps: PropsProfileStatusType, prevState: StateProfileStatusType) {\r\n        if(this.props.status != prevProps.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange =(e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.status}>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span className={styles.statusSpan} onClick={this.activateEditMode} >{this.props.status || '------'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input className={styles.statusInput} onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} type=\"text\" value={this.state.status} />\r\n                    </div >\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileStatus;","// extracted by mini-css-extract-plugin\nexport default {\"top\":\"ProfileDataForm_top__Gdqly\",\"info\":\"ProfileDataForm_info__NXbIT\",\"name\":\"ProfileDataForm_name__WiuA5\",\"editName\":\"ProfileDataForm_editName__dB3UO\",\"status\":\"ProfileDataForm_status__9SWje\",\"button\":\"ProfileDataForm_button__n7v2I\",\"lookingForAJob\":\"ProfileDataForm_lookingForAJob__T8k62\",\"skils\":\"ProfileDataForm_skils__WVGPq\",\"editSkils\":\"ProfileDataForm_editSkils__3fKwZ\",\"contacts\":\"ProfileDataForm_contacts__M++Dd\",\"title\":\"ProfileDataForm_title__ja1OU\",\"elements\":\"ProfileDataForm_elements__Y0gah\",\"contactBody\":\"ProfileDataForm_contactBody__z6QLt\",\"contact\":\"ProfileDataForm_contact__QGH4q\",\"editContact\":\"ProfileDataForm_editContact__dGGhn\",\"elementForm\":\"ProfileDataForm_elementForm__2avd-\"};","import { InjectedFormProps, reduxForm } from \"redux-form\"\r\nimport { createField, ExtractKeysType, Input } from \"../../common/FormsControls/formsControls\"\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport styles from './ProfileDataForm.module.scss'\r\nimport { ProfileType } from \"../../../types/types\"\r\nimport { FC } from \"react\"\r\nimport { FormDataProfileInfoType } from \"./ProfileInfo\"\r\n\r\n\r\n\r\ntype PropsProfileDataFormType = {\r\n    profile: ProfileType,\r\n    status: string,\r\n    updateStatus: (status: string) => void,\r\n}\r\n\r\ntype KeysType = ExtractKeysType<FormDataProfileInfoType>\r\n\r\nconst ProfileDataForm:FC<InjectedFormProps<FormDataProfileInfoType, PropsProfileDataFormType> & PropsProfileDataFormType> = ({ profile, status, updateStatus, handleSubmit, error }) => {\r\n    return (\r\n        <div className={styles.profileDataForm}>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={styles.top}>\r\n                    <div className={styles.info}>\r\n                        <div className={styles.name}>\r\n                            <span>full name: </span>\r\n                            <div className={styles.editName}>\r\n                                {createField<KeysType>(undefined, Input, 'fullName', 'fullName...', [], undefined, undefined)}\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.status}>\r\n                            <ProfileStatus status={status} updateStatus={updateStatus} />\r\n                        </div>\r\n                    </div>\r\n                    <button className={styles.button}>Save</button>\r\n                </div>\r\n                <div className={styles.lookingForAJob}>\r\n                    <span>LookingForAJob:</span>  {profile.lookingForAJob ? 'yes' : 'no'}\r\n                    {createField<KeysType>(undefined, Input, 'lookingForAJob', undefined, [], 'checkbox', undefined)}\r\n                </div>\r\n\r\n                {profile.lookingForAJob &&\r\n                    <div className={styles.skils}>\r\n                        <span>My profesional skils:</span>\r\n                        <div className={styles.editSkils}>\r\n                            {createField<KeysType>(undefined, Input, 'lookingForAJobDescription', 'my profesional skils...', [], undefined, undefined)}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div className={styles.contacts}> \r\n                    <span className={styles.title}>Contacts: </span>\r\n                    <div className={styles.elements}>\r\n                        {Object.keys(profile.contacts).map(key => {\r\n                            return (\r\n                                <ContactsForm contactsKey={key} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {error &&\r\n                        <div className={styles.errorSome}>{error}</div>\r\n                    }\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype ContactsFormType = {\r\n    contactsKey: string\r\n}\r\n\r\nconst ContactsForm:FC<ContactsFormType> = ({contactsKey}) => {\r\n    return (\r\n        <div className={styles.contactBody}>\r\n            <div className={styles.editContact}>\r\n                {createField(undefined, Input, 'contacts.' + contactsKey, `${contactsKey}...`, [], undefined, undefined)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst ProfileDataFormRedux = reduxForm<FormDataProfileInfoType, PropsProfileDataFormType>({form: 'profile'})(ProfileDataForm);\r\n\r\n\r\nexport default ProfileDataFormRedux;","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCamera(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#171717\",\n    d: \"M149.1 64.8L138.7 96 64 96C28.7 96 0 124.7 0 160L0 416c0 35.3 28.7 64 64 64l384 0c35.3 0 64-28.7 64-64l0-256c0-35.3-28.7-64-64-64l-74.7 0L362.9 64.8C356.4 45.2 338.1 32 317.4 32L194.6 32c-20.7 0-39 13.2-45.5 32.8zM256 192a96 96 0 1 1 0 192 96 96 0 1 1 0-192z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCamera);\nexport default __webpack_public_path__ + \"static/media/camera.d4cdb06d1b08f39ba17e89903e77ed61.svg\";\nexport { ForwardRef as ReactComponent };","import styles from './ProfileInfo.module.scss';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport profilePhoto from '../../../assets/images/user.jpg';\r\nimport ProfileDataFormRedux from './ProfileDadaForm';\r\nimport React, { FC, useState } from 'react';\r\nimport fon from '../../../assets/images/fon.jpeg'\r\nimport camera from '../../../assets/images/icons/camera.svg';\r\nimport { ProfileType } from '../../../types/types';\r\nimport { useAppDispatch, useAppSelector } from '../../../redux/redux-store';\r\nimport { getIsUpdateProgress, getProfile, getStatus } from '../../../redux/profile-selectors';\r\nimport { requestPhoto, updateProfile, updateUserStatus } from '../../../redux/profile-reducer';\r\n\r\ntype PropsProfileInfoType = {\r\n  isOwner: boolean,\r\n};\r\n\r\n\r\nexport type FormDataProfileInfoType = ProfileType;\r\n\r\n\r\nconst ProfileInfo:FC<PropsProfileInfoType> = (props) => {\r\n  const dispatch = useAppDispatch();\r\n  const status = useAppSelector(getStatus);\r\n  const profile = useAppSelector(getProfile);\r\n  const isUpdateProgress = useAppSelector(getIsUpdateProgress);\r\n\r\n\r\n\r\n  const updateStatus = (status: string) => {\r\n    dispatch(updateUserStatus(status))\r\n  }\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  let onPhotoChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files.length) {\r\n      dispatch(requestPhoto(e.target.files[0]))  \r\n    }\r\n  }\r\n  \r\n  let activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  let onSubmit = (formData: FormDataProfileInfoType) => {\r\n    isUpdateProgress && setEditMode(false)\r\n    dispatch(updateProfile(formData))\r\n  }\r\n\r\n  return (\r\n    <div className={styles.profileInfo}>\r\n      <div className={styles.images}>\r\n        <div className={styles.fon}>\r\n          <img src={fon} alt=\"fon\" />\r\n        </div>\r\n          <div className={styles.avatar}>\r\n            <img src={profile.photos.small != null ? profile.photos.small : profilePhoto} alt=\"avatar\" />\r\n          </div>\r\n          <label className={styles.changeAvatar} htmlFor=\"changeAvatar\">\r\n            <img src={camera} alt=\"camera\" />\r\n          </label>\r\n      </div>\r\n      <div className={styles.body}>\r\n        {props.isOwner && <input className={styles.input} id=\"changeAvatar\" type='file' onChange={onPhotoChange} />}\r\n        <div className={styles.statusBody}>\r\n          {editMode ?\r\n            <ProfileFormData onSubmit={onSubmit} profile={profile} status={status} updateStatus={updateStatus} />\r\n            : <ProfileData isOwner={props.isOwner} profile={profile} status={status} updateStatus={updateStatus}\r\n              activateEditMode={activateEditMode} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\ntype PropsProfileDataType= {\r\n  status: string,\r\n  updateStatus: (status: string) => void,\r\n  profile: ProfileType,\r\n  isOwner: boolean,\r\n  activateEditMode: () => void\r\n\r\n}\r\n\r\nconst ProfileData:FC<PropsProfileDataType> = ({ profile, status, updateStatus, isOwner, activateEditMode }) => {\r\n  return (\r\n    <div>\r\n      <div className={styles.top}>\r\n        <div className={styles.info}>\r\n          <div className={styles.name}>\r\n            {profile.fullName}\r\n          </div>\r\n          <div className={styles.status}>\r\n            <ProfileStatus status={status} updateStatus={updateStatus} />\r\n          </div>\r\n        </div>\r\n        {\r\n          isOwner && <button className={styles.button} onClick={activateEditMode} >Edit mode</button>\r\n        }\r\n      </div>\r\n      <div className={styles.LookingForAJob}>\r\n        <span >LookingForAJob:</span>  {profile.lookingForAJob ? 'yes' : 'no'}\r\n      </div>\r\n      <div className={styles.skils}>\r\n        { profile.lookingForAJob &&\r\n          <div className={styles.skilsBody}>\r\n            <span>My profesional skils:</span><span>{profile.lookingForAJobDescription}</span>\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n      \r\n      <div className={styles.contacts}>\r\n        <span>Contacts: </span>\r\n        <div className={styles.contact}>\r\n          {Object.keys(profile.contacts).map(key => {\r\n            return (\r\n              <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} />  \r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\ntype PropsProfileFormDataType = {\r\n  status: string,\r\n  updateStatus: (status: string) => void,\r\n  profile: ProfileType,\r\n  onSubmit: (formData: FormDataProfileInfoType) => void\r\n}\r\n\r\nconst ProfileFormData:FC<PropsProfileFormDataType> = ({ profile, status, updateStatus, onSubmit }) => {\r\n  return (\r\n    <>\r\n      <ProfileDataFormRedux initialValues={profile} onSubmit={onSubmit} profile={profile} status={status} updateStatus={updateStatus} />\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\ntype ContactsTupe = {\r\n  contactTitle: string,\r\n  contactValue: string | null\r\n}\r\n\r\nconst Contacts:FC<ContactsTupe> = ({contactTitle, contactValue}) => {\r\n  return (\r\n    <div>\r\n      <span>{contactTitle}</span>: {contactValue}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import { FC } from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport s from './Profile.module.scss';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\ntype PropsProfileType = {\r\n  isOwner: boolean\r\n}\r\n\r\n\r\n const Profile: FC<PropsProfileType> = (props) => {\r\n\r\n\r\n  return (\r\n    <div className={s.profile}>\r\n      <ProfileInfo isOwner={props.isOwner} />\r\n      <MyPosts />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Profile;\r\n","import { connect } from \"react-redux\"\r\n\r\nimport  { FC, useEffect } from \"react\";\r\nimport { profileMount, requestProfile, requestUserStatus} from \"../../redux/profile-reducer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { getAutoRizedUserId } from \"../../redux/profile-selectors\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport Profile from \"./Profile\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\ntype ParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStateType = {\r\n    autoRizedUserId: number,\r\n}\r\ntype MapDispatchType = {\r\n    requestProfile: (userId: string) => void,\r\n    requestUserStatus: (userId: string) => void,\r\n    profileMount: (profileMoutn: boolean) => void,\r\n}\r\ntype OwnType = {}\r\ntype PropsType = MapStateType & MapDispatchType & OwnType;\r\n\r\nlet ProifleContainer: FC<PropsType> = (props) => {\r\n\r\n    let {userId} = useParams<ParamsType>();\r\n    let owner = userId;\r\n    if(!userId ) {\r\n        userId = String(props.autoRizedUserId); \r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        props.requestProfile(userId);\r\n        props.requestUserStatus(userId);\r\n        props.profileMount(true);\r\n\r\n        return () => {\r\n            props.profileMount(false);\r\n        }\r\n    }, [userId])\r\n\r\n    \r\n    \r\n    return (\r\n\r\n        <>\r\n            <Profile isOwner={!owner} />\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n\r\n    return {\r\n        autoRizedUserId: getAutoRizedUserId(state),\r\n\r\n    };\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps, {requestUserStatus, requestProfile, profileMount}),\r\n    withAuthRedirect,\r\n) (ProifleContainer)\r\n\r\n \r\n\r\n\r\n\r\n\r\n"],"names":["getStatus","state","profilePage","status","getAutoRizedUserId","auth","userId","getPosts","posts","getProfile","profile","getIsUpdateProgress","isUpdateProgress","getProfileMy","infoPage","profileInfo","props","profileMy","photos","_jsxs","className","styles","children","_jsx","src","large","alt","message","likeCounter","dispatch","useAppDispatch","register","handleSubmit","formState","errors","useForm","onSubmit","formData","addPost","post","htmlFor","required","maxLength","value","classNames","plus","userPost","useAppSelector","postElement","reverse","map","p","Post","id","MyPostForm","ProfileStatus","React","constructor","arguments","editMode","this","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","componentDidUpdate","prevProps","prevState","render","statusSpan","onClick","statusInput","onChange","autoFocus","onBlur","type","ContactsForm","_ref2","contactsKey","contactBody","editContact","createField","undefined","Input","concat","reduxForm","form","_ref","error","profileDataForm","top","info","name","editName","button","lookingForAJob","skils","editSkils","contacts","title","elements","Object","keys","key","errorSome","ProfileData","isOwner","fullName","LookingForAJob","skilsBody","lookingForAJobDescription","contact","Contacts","contactTitle","contactValue","ProfileFormData","_Fragment","ProfileDataFormRedux","initialValues","_ref3","updateUserStatus","setEditMode","useState","images","fon","avatar","small","profilePhoto","changeAvatar","camera","body","input","target","files","length","requestPhoto","statusBody","updateProfile","s","ProfileInfo","MyPosts","compose","connect","autoRizedUserId","requestUserStatus","requestProfile","profileMount","withAuthRedirect","useParams","owner","String","useEffect","Profile"],"sourceRoot":""}