{"version":3,"file":"static/js/104.c885afcc.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Prifile/MyPosts/MyPosts.module.scss?e0c9","webpack://react-1/./src/components/Prifile/MyPosts/Post/Post.module.scss?a1a4","components/Prifile/MyPosts/Post/Post.jsx","components/Prifile/MyPosts/MyPostsForm.js","components/Prifile/MyPosts/MyPosts.jsx","components/Prifile/MyPosts/MyPostsContainer.jsx","webpack://react-1/./src/components/Prifile/Profile.module.scss?3cda","webpack://react-1/./src/components/Prifile/ProfileInfo/ProfileInfo.module.scss?6978","components/Prifile/ProfileInfo/ProfileStatus.jsx","components/Prifile/ProfileInfo/ProfileInfo.jsx","components/Prifile/Profile.jsx","redux/profile-selectors.js","components/Prifile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsTitle\":\"MyPosts_postsTitle__MOU-g\",\"newPost\":\"MyPosts_newPost__RsHX5\",\"area\":\"MyPosts_area__LXBtG\",\"button\":\"MyPosts_button__tROL6\",\"posts\":\"MyPosts_posts__1iPHK\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__2JC9L\",\"body\":\"Post_body__QBbNz\",\"avatar\":\"Post_avatar__NyR4X\",\"text\":\"Post_text__i9zxY\",\"button\":\"Post_button__N8b6e\"};","import s from './Post.module.scss';\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.post}>\r\n      <div className={s.body}>\r\n        <div className={s.avatar}>\r\n          <img src=\"https://mighty.tools/mockmind-api/content/human/57.jpg\" alt=\"avatar\" />\r\n        </div>\r\n        <div className={s.text}>{props.message}</div>\r\n      </div>\r\n      <button className={s.button}>like{props.likeCounter}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Field, reduxForm } from \"redux-form\"\r\n//import { Textarea } from \"../../common/FormsControls/formsControls\";\r\n//import { maxWidthCriator, required } from \"../../../utils/validators/validations\";\r\n\r\n//let maxLength10 = maxWidthCriator(10)\r\n\r\nconst MyPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field /*>component={Textarea}*/  component={'textarea'} name=\"myPosBody\" \r\n                //validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <button>sent post</button>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nlet MyPostFeduxForm = reduxForm({form: 'myPost'})(MyPostForm);\r\n\r\n\r\n\r\nexport default MyPostFeduxForm;","import React, { useState } from 'react';\r\nimport s from './MyPosts.module.scss';\r\nimport Post from './Post/Post';\r\nimport MyPostFeduxForm from './MyPostsForm';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let [age, setAge] = useState(33);\r\n\r\n  setTimeout(() => {\r\n    setAge(10)\r\n  }, 3000);\r\n\r\n  console.log('render');\r\n\r\n  let postElement = [...props.posts].reverse().map(p => {\r\n    return (\r\n      <Post message={p.message} likeCounter={p.likeCounter} key={p.id} />\r\n    )\r\n  });\r\n\r\n\r\n  const addPostForm = (formData) => {\r\n    props.addPost(formData.myPosBody);\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={s.body}>\r\n      <div className={s.postsTitle} >My posts</div>\r\n      <div className={s.newPost}>\r\n          <MyPostFeduxForm onSubmit={addPostForm} />\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postElement}\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport { addPostCriator, updataNewPostCriator } from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n// let mapStateToProps = (state) => {\r\n//   return {\r\n//     posts: state.profilePage.posts,\r\n//   };\r\n// };\r\n\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     addPost: (data) => {\r\n//       dispatch(addPostCriator(data));\r\n//     },\r\n//   };\r\n// };\r\n\r\n// const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nlet MyPostsContainer = (props) => {\r\n\r\n\r\n\r\n  return (\r\n    <MyPosts posts={props.posts}  />\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default MyPostsContainer;\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__5Wt+s\",\"image\":\"Profile_image__kkRlD\",\"postsTitle\":\"Profile_postsTitle__UHU0P\",\"form\":\"Profile_form__LFGVf\",\"input\":\"Profile_input__30shm\",\"button\":\"Profile_button__DIFzW\",\"post\":\"Profile_post__GNa3s\"};","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"ProfileInfo_body__UihLj\",\"avatar\":\"ProfileInfo_avatar__KU7H-\",\"info\":\"ProfileInfo_info__ByPhh\",\"name\":\"ProfileInfo_name__pcQIG\",\"aboutMe\":\"ProfileInfo_aboutMe__uG+2C\",\"lookingForAJobDescription\":\"ProfileInfo_lookingForAJobDescription__S6sUV\"};","import React, { useEffect, useState } from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false); \r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {  !editMode &&\r\n                <div>\r\n                    <span onClick={activateEditMode} style={{backgroundColor: 'gray'}} >{props.status || '------'}</span>\r\n                </div>\r\n            }\r\n            {   editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}  type=\"text\" value={status}  />\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.scss';\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  if(!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div className={s.body}>\r\n      <div>\r\n      <a href=\"#\" className={s.avatar}>\r\n        <img src={props.profile.photos.small == null ? userPhoto : props.profile.photos.small} alt=\"avatar\" />\r\n      </a>\r\n      <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus} />\r\n      </div>\r\n      <div className={s.info}>\r\n        <a href=\"#\" className={s.name}>{props.profile.fullName}</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.scss';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div className={s.profile}>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n\r\n      <MyPostsContainer posts={props.posts} addPostCriator={props.addPostCriator} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n\r\n","\r\nexport const getProfile = (state) => {\r\n    return state.profilePage.profile;\r\n}\r\n\r\nexport const getStatus = (state) => {\r\n    return state.profilePage.status;\r\n}\r\n\r\nexport const getAutoRizedUserId = (state) => {\r\n    return state.auth.userId;\r\n}\r\n\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}","import { connect } from \"react-redux\"\r\nimport Profile from \"./Profile\"\r\nimport React, { useEffect } from \"react\";\r\nimport { addPostCriator, getProfileId, getUserStatus, updateUserStatus } from \"../../redux/profile-reducer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport withAuthNavigate from \"../../hoc/withAuthNavigate\";\r\nimport { getAutoRizedUserId, getIsAuth, getProfile, getStatus } from \"../../redux/profile-selectors\";\r\n\r\n\r\n\r\n\r\n\r\nlet ProifleContainer = (props) => {\r\n    let {userId} = useParams();\r\n    if(!userId ) {\r\n        userId = props.autoRizedUserId; //31356\r\n    };\r\n\r\n    useEffect(() => {\r\n        props.getProfileId(userId);\r\n        props.getUserStatus(userId);\r\n    }, [userId])\r\n\r\n    \r\n    \r\n    return (\r\n        \r\n        <Profile {...props} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: getProfile(state),\r\n        status: getStatus(state),\r\n        autoRizedUserId: getAutoRizedUserId(state),\r\n        isAuth: getIsAuth(state),\r\n        posts: state.profilePage.posts\r\n    };\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfileId, getUserStatus, updateUserStatus, addPostCriator}),\r\n    withAuthNavigate,\r\n) (ProifleContainer)\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n// class ProifleContainer extends React.Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         axios.get(`https://social-network.samuraijs.com/api/1.0/profile/2`)\r\n//             .then((response) => {\r\n//                 this.props.setUserProfile(response.data)\r\n//             })\r\n//     }\r\n\r\n\r\n//     render() {\r\n//         return (\r\n//             <Profile {...this.props} />\r\n//         )\r\n//     }\r\n// }"],"names":["props","_jsxs","className","s","children","_jsx","src","alt","message","likeCounter","reduxForm","form","onSubmit","handleSubmit","Field","component","name","React","age","setAge","useState","setTimeout","console","log","postElement","posts","reverse","map","p","Post","id","body","postsTitle","newPost","MyPostFeduxForm","formData","addPost","myPosBody","MyPosts","editMode","setEditMode","status","setStatus","useEffect","_Fragment","onClick","activateEditMode","style","backgroundColor","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateUserStatus","type","profile","href","photos","small","userPhoto","ProfileStatus","fullName","Preloader","ProfileInfo","MyPostsContainer","addPostCriator","getProfile","state","profilePage","getStatus","getAutoRizedUserId","auth","userId","getIsAuth","isAuth","compose","connect","autoRizedUserId","getProfileId","getUserStatus","withAuthNavigate","useParams","Profile"],"sourceRoot":""}