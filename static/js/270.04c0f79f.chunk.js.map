{"version":3,"file":"static/js/270.04c0f79f.chunk.js","mappings":"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","sources":["webpack://react-1/./src/pages/chat/Chat.module.scss?06b5","pages/chat/ChatPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"Chat_chat__RURbJ\",\"messages\":\"Chat_messages__AFQob\",\"message\":\"Chat_message__fVFtr\",\"messageOvner\":\"Chat_messageOvner__25wPX\",\"avatar\":\"Chat_avatar__eIe73\",\"body\":\"Chat_body__p348B\",\"bodyOvner\":\"Chat_bodyOvner__DYGND\",\"name\":\"Chat_name__sWK9S\",\"nameOvner\":\"Chat_nameOvner__w3bES\",\"messageText\":\"Chat_messageText__1U4I1\",\"s\":\"Chat_s__AM6UJ\"};","import { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport stylles from './Chat.module.scss'\r\nimport classNames from \"classnames\";\r\nimport { useAppDispatch, useAppSelector } from \"../../redux/redux-store\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { sendMessage, startMessagesListining } from \"../../redux/chat-reducer\";\r\n\r\n const ChatPage = () => {\r\n\r\n\r\n  return <><Chat /></>\r\n};\r\n\r\n\r\nconst Chat = () => {\r\n\r\n  return (\r\n    <div className={stylles.chat}>\r\n       <Messages />\r\n       <ChatForm />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Messages = () => {\r\n  const dispatch = useAppDispatch();\r\n  const messages = useAppSelector(state => state.chat.messages);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [isScrollActive, setIsScrollActive] = useState(true);\r\n\r\n  const scrollHandler = (e: React.UIEvent<HTMLDivElement>) => {\r\n    const element = e.currentTarget;\r\n\r\n    if(Math.abs(element.scrollHeight - element.scrollTop - element.clientHeight) < 30) {\r\n       !isScrollActive && setIsScrollActive(true)\r\n    } else {\r\n      isScrollActive && setIsScrollActive(false)\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    dispatch(startMessagesListining())\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(containerRef.current && isScrollActive) {\r\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n    }\r\n  }, [messages])\r\n\r\n  return (\r\n    <div className={stylles.messages} ref={containerRef} onScroll={scrollHandler} >\r\n      {\r\n        messages.map(m => <Message {...m} />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\ntype MessageType = {\r\n  message: string,\r\n  photo: string,\r\n  userId: number,\r\n  userName: string\r\n}\r\n\r\n\r\nconst Message = React.memo(({message, photo, userName, userId}: MessageType) => {\r\n  let ovner = useAppSelector((state) => state.auth.userId);\r\n  console.log(ovner);\r\n  return (\r\n    <div className={classNames(stylles.message, {[stylles.messageOvner]: ovner === userId})}>\r\n      <div className={stylles.avatar}>\r\n        <img src={photo} alt=\"avatar\" />\r\n      </div>\r\n      <div className={classNames(stylles.body, {[stylles.bodyOvner]: ovner === userId})}>\r\n      <div className={classNames(stylles.name, {[stylles.nameOvner]: ovner === userId})}>{userName}</div>\r\n        <div className={stylles.messageText}>{message}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype FormData = {\r\n    message: string\r\n}\r\n\r\nconst ChatForm= () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {register, handleSubmit, reset, formState: {errors}} = useForm<FormData>();\r\n\r\n  const submit:SubmitHandler<FormData> = (formData) => {\r\n    const {message} = formData;\r\n    dispatch(sendMessage(message))\r\n    reset({message: ''})\r\n  }\r\n\r\n  return (\r\n    <>  \r\n        <form onSubmit={handleSubmit(submit)}>\r\n            <div>\r\n            <textarea {...register('message', {required: 'field is required'})} className={classNames(stylles.messageArea, {[stylles.error]: errors.message})} \r\n            ></textarea>\r\n            </div>\r\n            { errors.message && \r\n              <span className={stylles.errorSpan}>{errors.message.message}</span>\r\n            }\r\n            <button className={stylles.button}>find</button>\r\n        </form>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default ChatPage;\r\n\r\n"],"names":["Chat","_jsxs","className","stylles","chat","children","_jsx","Messages","ChatForm","dispatch","useAppDispatch","messages","useAppSelector","state","containerRef","useRef","isScrollActive","setIsScrollActive","useState","useEffect","startMessagesListining","current","scrollTop","scrollHeight","ref","onScroll","e","element","currentTarget","Math","abs","clientHeight","map","m","Message","React","_ref","message","photo","userName","userId","ovner","auth","console","log","classNames","messageOvner","avatar","src","alt","body","bodyOvner","name","nameOvner","messageText","register","handleSubmit","reset","formState","errors","useForm","_Fragment","onSubmit","formData","sendMessage","required","messageArea","error","errorSpan","button","ChatPage"],"sourceRoot":""}